{"version":3,"sources":["../../../js/forms/MultiSelect.jsx"],"names":["Select","props","componentDidMount","bind","buildList","multi","field","value","handleSelect","console","debug","JSON","stringify","list","map","schema","log","title","id","React","Component"],"mappings":";;;;;;;;;;IAAMA,M;;;AACF,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA,oHACRA,KADQ;;AAGd,cAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;AACA,cAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,OAAjB;AAJc;AAKjB;;;;4CAEkB,CAElB;;;iCAEO;AACJ,gBAAG,KAAKF,KAAL,CAAWI,KAAd,EAAqB;AACjB,uBAAO;AAAA;AAAA,sBAAQ,IAAI,WAAW,KAAKJ,KAAL,CAAWK,KAAlC,EAAyC,eAAe,KAAKL,KAAL,CAAWM,KAAnE,EAA0E,cAAY,KAAKN,KAAL,CAAWK,KAAjG,EAAwG,UAAU,KAAKL,KAAL,CAAWO,YAA7H,EAA2I,WAAU,YAArJ,EAAkK,cAAlK;AACF,yBAAKJ,SAAL;AADE,iBAAP;AAGH,aAJD,MAKI;AACA,uBAAO;AAAA;AAAA,sBAAQ,IAAI,WAAW,KAAKH,KAAL,CAAWK,KAAlC,EAAyC,OAAO,KAAKL,KAAL,CAAWM,KAA3D,EAAkE,cAAY,KAAKN,KAAL,CAAWK,KAAzF,EAAgG,UAAU,KAAKL,KAAL,CAAWO,YAArH,EAAmI,WAAU,YAA7I;AACF,yBAAKJ,SAAL;AADE,iBAAP;AAGH;AAEJ;;;oCAEU;AACPK,oBAAQC,KAAR,CAAc,gCAA8BC,KAAKC,SAAL,CAAe,KAAKX,KAAL,CAAWY,IAA1B,CAA5C;;AAEA,gBAAIA,OAAO,KAAKZ,KAAL,CAAWY,IAAX,CAAgBC,GAAhB,CAAoB,UAASC,MAAT,EAAiB;AAC5CN,wBAAQO,GAAR,CAAYL,KAAKC,SAAL,CAAeG,MAAf,CAAZ;;AAEA;AACA,uBAAO;AAAA;AAAA,sBAAQ,WAAU,iBAAlB,EAAoC,KAAKA,OAAOE,KAAhD,EAAuD,OAAOF,OAAOE,KAArE,EAA4E,WAASF,OAAOG,EAA5F,EAAgG,cAAY,KAAKjB,KAAL,CAAWK,KAAvH,EAA8H,eAAaS,MAA3I;AAAoJA,2BAAOE;AAA3J,iBAAP;AACH,aAL8B,CAK7Bd,IAL6B,CAKxB,IALwB,CAApB,CAAX;;AAOA,mBAAOU,IAAP;AAEH;;;;EAtCgBM,MAAMC,S","file":"MultiSelect.js","sourcesContent":["class Select extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.buildList = this.buildList.bind(this);\n    }\n\n    componentDidMount(){\n\n    }\n\n    render(){\n        if(this.props.multi) {\n            return <select id={\"select\" + this.props.field} selectedvalue={this.props.value} data-field={this.props.field} onChange={this.props.handleSelect} className=\"list-group\" multiple>\n                {this.buildList()}\n            </select>;\n        }\n        else{\n            return <select id={\"select\" + this.props.field} value={this.props.value} data-field={this.props.field} onChange={this.props.handleSelect} className=\"list-group\">\n                {this.buildList()}\n            </select>;\n        }\n\n    }\n\n    buildList(){\n        console.debug(\"Building MultiSelect List: \"+JSON.stringify(this.props.list));\n\n        let list = this.props.list.map(function(schema) {\n            console.log(JSON.stringify(schema));\n\n            //return <button key={schema.title} type=\"button\" className=\"list-group-item\" data-schema={schema} onClick={this.props.onValueSelect}>{schema.title}</button>\n            return <option className=\"list-group-item\" key={schema.title} value={schema.title} data-id={schema.id} data-field={this.props.field} data-schema={schema}>{schema.title}</option>;\n        }.bind(this));\n\n        return list;\n\n    }\n}"]}
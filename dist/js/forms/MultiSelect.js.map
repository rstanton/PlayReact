{"version":3,"sources":["../../../js/forms/MultiSelect.jsx"],"names":["Select","props","componentDidMount","bind","buildList","getObjectsByID","buildOption","state","list","console","debug","field","JSON","stringify","value","handleSelect","multi","arr","target","map","schema","title","id","setState","next","db","PouchDB","OBJECT_DB","query","OBJECT_BY_TYPE","key","err","res","error","rows","length","obj","log","name","type","React","Component"],"mappings":"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","file":"MultiSelect.js","sourcesContent":["/**\n * @Todo there's a bug with single entry lists, the value never gets saved because the user never selects anything.\n */\nclass Select extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.buildList = this.buildList.bind(this);\n        this.getObjectsByID = this.getObjectsByID.bind(this);\n        this.buildOption = this.buildOption.bind(this);\n\n        this.state = {\n            list: []\n        };\n\n        this.list = [];\n\n    }\n\n    componentDidMount(){\n        this.buildList();\n    }\n\n    render(){\n        console.debug(\"Building Select for \"+this.props.field+\", with value '\"+JSON.stringify(this.props.value)+\"'\");\n\n        return <select id={\"select\" + this.props.field} value={this.props.value} data-field={this.props.field} onChange={this.props.handleSelect} className=\"list-group\" multiple={this.props.multi}>\n                {this.state.list}\n            </select>;\n\n    }\n\n    buildList(){\n        let arr = [];\n        console.debug(\"Building List for \"+this.props.target);\n\n        if(this.props.target == \"http://architecture.com/Object\"){\n            //Use the known list of all user-configured schemas\n            this.list = this.props.list;\n            this.buildOption();\n        }\n        else if(this.props.target){\n            //Lookup all objects of the given type.\n            this.getObjectsByID(this.props.target, this.buildOption);\n        }\n        else{\n            this.list= this.props.list;\n            this.buildOption();\n        }\n    }\n\n    buildOption(){\n        console.debug(\"Building List Output for \"+JSON.stringify(this.list));\n\n        //Build the list option, set the type to the ID of the selected object\n        let list = this.list.map(function(schema) {\n            //return <button key={schema.title} type=\"button\" className=\"list-group-item\" data-schema={schema} onClick={this.props.onValueSelect}>{schema.title}</button>\n            return <option className=\"list-group-item\" key={schema.title} value={schema.id} data-title={schema.title} data-type={schema.id} data-field={this.props.field}>{schema.title}</option>;\n        }.bind(this));\n\n        this.setState({\n            list: list\n        });\n    }\n\n    //@ToDo externalise to db handling object\n    getObjectsByID(id, next){\n        let db = new PouchDB(OBJECT_DB);\n        console.debug(\"Getting Objects for type \"+id);\n\n        db.query(OBJECT_BY_TYPE, {key: id}, function(err, res) {\n            if(err)\n                console.error(err);\n            else{\n                console.debug(\"Got \"+res.rows.length+\" for \"+id);\n\n                let list = res.rows.map(function(obj){\n                    console.log(\"Processing List Option for \"+id+\" based on object \"+JSON.stringify(obj));\n\n                    return {\n                        title: obj.value.name,\n                        id: obj.value.type\n                    };\n                });\n\n                console.log(\"Got \"+JSON.stringify(list)+\" as items for \"+id);\n\n                this.list = list;\n\n                next();\n            }\n        }.bind(this));\n    }\n}"]}
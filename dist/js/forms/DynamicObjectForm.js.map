{"version":3,"sources":["../../../js/forms/DynamicObjectForm.jsx"],"names":["DynamicObjectForm","props","buildInputForm","bind","state","form","console","log","JSON","stringify","schema","inputFields","properties","field","debug","obj","type","localeCompare","push","onChange","React","Component"],"mappings":";;;;;;;;;;IAAMA,iB;;;AACF,+BAAYC,KAAZ,EAAkB;AAAA;;AAAA,0IACRA,KADQ;;AAGd,cAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,OAAtB;;AAEA,cAAKC,KAAL,GAAa,EAAb;AALc;AAOjB;;;;iCAEQ;AACL,gBAAIC,OAAO,KAAKH,cAAL,EAAX;;AAEA,mBAAOG,IAAP;AACH;;;yCAGe;AACZC,oBAAQC,GAAR,CAAY,6BAA2BC,KAAKC,SAAL,CAAe,KAAKR,KAAL,CAAWS,MAA1B,CAAvC;;AAEA,gBAAIC,cAAc,EAAlB;AACA,gBAAIV,QAAQ,KAAKA,KAAL,CAAWS,MAAX,CAAkBE,UAA9B;;AAEA;;AAEA,iBAAI,IAAIC,KAAR,IAAiBZ,KAAjB,EAAuB;AACnBK,wBAAQQ,KAAR,CAAcN,KAAKC,SAAL,CAAeR,MAAMY,KAAN,CAAf,CAAd;;AAEA,oBAAIE,MAAMd,MAAMY,KAAN,CAAV;AACA,oBAAGE,IAAIC,IAAJ,CAASC,aAAT,CAAuB,QAAvB,KAAkC,CAArC,EAAwC;AACpCN,gCAAYO,IAAZ,CAAiB;AAAA;AAAA,0BAAK,KAAKL,KAAV;AAAiB;AAAA;AAAA,8BAAO,SAAS,UAAUA,KAA1B;AAAkCA;AAAlC,yBAAjB;AACb,uDAAO,MAAK,MAAZ,EAAmB,UAAU,KAAKZ,KAAL,CAAWkB,QAAxC,EAAkD,WAAU,cAA5D;AACO,yCAAa,WAAWN,KAD/B,EACsC,IAAIA,KAD1C,EACiD,cAAYA,KAD7D;AADa,qBAAjB;AAGH,iBAJD,MAKK,IAAGE,IAAIC,IAAJ,CAASC,aAAT,CAAuB,QAAvB,KAAkC,CAArC,EAAuC,CAE3C,CAFI,MAGA,IAAGF,IAAIC,IAAJ,CAASC,aAAT,CAAuB,OAAvB,KAAiC,CAApC,EAAuC;AACxCX,4BAAQC,GAAR,CAAY,eAAZ;AACAI,gCAAYO,IAAZ,CAAiB;AAAA;AAAA,0BAAK,KAAKL,KAAV;AAAiB;AAAA;AAAA,8BAAO,SAAS,UAAQA,KAAxB;AAAgCA;AAAhC,yBAAjB;AAA+D,4CAAC,iBAAD,IAAmB,IAAI,UAAQA,KAA/B,EAAsC,QAAQ,KAAKZ,KAAL,CAAWS,MAAzD;AAA/D,qBAAjB;AACH;AACJ;;AAED,mBAAOC,WAAP;AACH;;;;EA5C2BS,MAAMC,S","file":"DynamicObjectForm.js","sourcesContent":["class DynamicObjectForm extends React.Component{\n    constructor(props){\n        super(props);\n        \n        this.buildInputForm = this.buildInputForm.bind(this);\n\n        this.state = {\n        };\n    }\n\n    render() {\n        let form = this.buildInputForm();\n\n        return form;\n    }\n\n\n    buildInputForm(){\n        console.log(\"Building Input Form for \"+JSON.stringify(this.props.schema));\n\n        let inputFields = [];\n        let props = this.props.schema.properties;\n\n        //@Todo this needs to support all JSON Schema type fields\n\n        for(let field in props){\n            console.debug(JSON.stringify(props[field]));\n\n            let obj = props[field];\n            if(obj.type.localeCompare(\"string\")==0) {\n                inputFields.push(<div key={field}><label htmlFor={\"input\" + field}>{field}</label>\n                    <input type=\"text\" onChange={this.props.onChange} className=\"form-control\"\n                           placeholder={\"input \" + field} id={field} data-title={field}/></div>);\n            }\n            else if(obj.type.localeCompare(\"object\")==0){\n\n            }\n            else if(obj.type.localeCompare(\"array\")==0) {\n                console.log(\"Buiding Array\");\n                inputFields.push(<div key={field}><label htmlFor={\"input\"+field}>{field}</label><ObjectListBuilder id={\"input\"+field} schema={this.props.schema}/></div>);\n            }\n        }\n\n        return inputFields;\n    }\n}"]}
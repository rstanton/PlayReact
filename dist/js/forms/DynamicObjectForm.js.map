{"version":3,"sources":["../../../js/forms/DynamicObjectForm.jsx"],"names":["DynamicObjectForm","props","buildInputForm","bind","state","inputFields","form","console","log","JSON","stringify","schema","properties","x","push","onChange","React","Component"],"mappings":";;;;;;;;;;IAAMA,iB;;;AACF,+BAAYC,KAAZ,EAAkB;AAAA;;AAAA,0IACRA,KADQ;;AAGd,cAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,OAAtB;;AAEA,cAAKC,KAAL,GAAa;AACTC,yBAAY;AADH,SAAb;AALc;AAQjB;;;;iCAEQ;AACL,gBAAIC,OAAO,KAAKJ,cAAL,EAAX;;AAEA,mBAAOI,IAAP;AACH;;;yCAGe;AACZC,oBAAQC,GAAR,CAAY,6BAA2BC,KAAKC,SAAL,CAAe,KAAKT,KAAL,CAAWU,MAA1B,CAAvC;;AAEA,gBAAIN,cAAc,EAAlB;AACA,gBAAIJ,QAAQ,KAAKA,KAAL,CAAWU,MAAX,CAAkBC,UAA9B;;AAEA;;AAEA;AACA,iBAAI,IAAIC,CAAR,IAAaZ,KAAb,EAAmB;AACfI,4BAAYS,IAAZ,CAAiB;AAAA;AAAA,sBAAK,KAAKD,CAAV;AACb;AAAA;AAAA,0BAAO,SAAS,UAAUA,CAA1B;AAA8BA;AAA9B,qBADa;AAEb,mDAAO,MAAK,MAAZ,EAAmB,UAAU,KAAKZ,KAAL,CAAWc,QAAxC,EAAkD,WAAU,cAA5D,EAA2E,aAAa,WAAWF,CAAnG,EAAsG,IAAI,UAAUA,CAApH,EAAuH,cAAYA,CAAnI;AAFa,iBAAjB;AAGH;;AAED,mBAAOR,WAAP;AACH;;;;EAlC2BW,MAAMC,S","file":"DynamicObjectForm.js","sourcesContent":["class DynamicObjectForm extends React.Component{\n    constructor(props){\n        super(props);\n        \n        this.buildInputForm = this.buildInputForm.bind(this);\n\n        this.state = {\n            inputFields:[]\n        }\n    }\n\n    render() {\n        let form = this.buildInputForm();\n\n        return form;\n    }\n\n\n    buildInputForm(){\n        console.log(\"Building Input Form for \"+JSON.stringify(this.props.schema));\n\n        let inputFields = [];\n        let props = this.props.schema.properties;\n\n        //inputFields.push(<p key={\"label\"}>Create a new {this.props.schema.title}</p>)\n\n        //@Todo this needs to support all JSON Schema type fields\n        for(let x in props){\n            inputFields.push(<div key={x}>\n                <label htmlFor={\"input\" + x}>{x}</label>\n                <input type=\"text\" onChange={this.props.onChange} className=\"form-control\" placeholder={\"input \" + x} id={\"input\" + x} data-title={x}/></div>);\n        }\n\n        return inputFields;\n    }\n}"]}
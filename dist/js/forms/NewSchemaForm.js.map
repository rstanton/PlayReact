{"version":3,"sources":["../../../js/forms/NewSchemaForm.jsx"],"names":["NewSchemaForm","props","handleSubmit","bind","handleChange","createSchemaView","state","schema","form","change","setState","target","value","event","obj","JSON","parse","db","PouchDB","SCHEMA_DB","post","err","doc","console","error","preventDefault","title","designDoc","_id","views","by_name","map","emit","toString","put","resp","status","next","log","React","Component"],"mappings":";;;;;;;;;;AAAA;;IAEMA,a;;;AACF,2BAAYC,KAAZ,EAAkB;AAAA;;AAAA,kIACRA,KADQ;;AAGd,cAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AACA,cAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AACA,cAAKE,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBF,IAAtB,OAAxB;;AAEA,cAAKG,KAAL,GAAa;AACTC,oBAAO;AADE,SAAb;AAPc;AAUjB;;;;iCAEO;AACJ,gBAAIC,OAAO;AAAA;AAAA,kBAAM,QAAO,GAAb,EAAiB,UAAU,KAAKN,YAAhC;AACP;AAAA;AAAA,sBAAK,WAAU,YAAf;AACI;AAAA;AAAA,0BAAO,SAAS,QAAhB;AAAA;AAAA,qBADJ;AAEQ,sDAAU,WAAW,cAArB,EAAqC,MAAM,IAA3C,EAAiD,IAAI,QAArD,EAA+D,OAAO,KAAKI,KAAL,CAAWC,MAAjF,EAAyF,UAAU,KAAKH,YAAxG,EAAsH,aAAa,mBAAnI,GAFR;AAGI;AAAA;AAAA,0BAAQ,MAAK,QAAb,EAAsB,WAAU,iBAAhC;AAAA;AAAA;AAHJ;AADO,aAAX;;AAQA,mBAAOI,IAAP;AACH;;;qCAEYC,M,EAAO;AAChB,iBAAKC,QAAL,CAAc;AACVH,wBAAQE,OAAOE,MAAP,CAAcC;AADZ,aAAd;AAGH;;;qCAEYC,K,EAAM;AACf,gBAAIC,MAAMC,KAAKC,KAAL,CAAW,KAAKV,KAAL,CAAWC,MAAtB,CAAV;;AAEA,gBAAIU,KAAK,IAAIC,OAAJ,CAAYC,SAAZ,CAAT;AACAF,eAAGG,IAAH,CAAQN,GAAR,EAAa,UAASO,GAAT,EAAaC,GAAb,EAAiB;AAC1B,oBAAGD,GAAH,EACIE,QAAQC,KAAR,CAAcH,GAAd;;AAEJ,qBAAKhB,gBAAL,CAAsBS,GAAtB;AACH,aALY,CAKXX,IALW,CAKN,IALM,CAAb;;AAOA,iBAAKO,QAAL,CAAc;AACVH,wBAAO;AADG,aAAd;;AAIAM,kBAAMY,cAAN;AACH;;AAED;;;;;;;yCAIiBlB,M,EAAO;AACpB,gBAAIU,KAAK,IAAIC,OAAJ,CAAYX,OAAOmB,KAAnB,CAAT;;AAGA,gBAAIC,YAAY;AACZC,qBAAI,aAAWrB,OAAOmB,KADV;AAEZG,uBAAM;AACFC,6BAAQ;AACJC,6BAAI,UAAST,GAAT,EAAc;AACdU,iCAAKV,GAAL;AACH,yBAFG,CAEFW,QAFE;AADA;AADN;AAFM,aAAhB;;AAWAhB,eAAGiB,GAAH,CAAOP,SAAP,EAAkB,UAASN,GAAT,EAAcc,IAAd,EAAmB;AACjC,oBAAGd,GAAH,EAAQ;AACJ,wBAAIA,IAAIe,MAAJ,IAAc,GAAlB,EACIb,QAAQC,KAAR,CAAcH,GAAd;;AAEJ,yBAAKpB,KAAL,CAAWoC,IAAX;AACH,iBALD,MAMK;AACDd,4BAAQe,GAAR,CAAY,eAAe/B,OAAOmB,KAAtB,GAA8B,WAA1C;;AAEA,yBAAKzB,KAAL,CAAWoC,IAAX;AACH;AACJ,aAZiB,CAYhBlC,IAZgB,CAYX,IAZW,CAAlB;AAaH;;;;EAjFuBoC,MAAMC,S","file":"NewSchemaForm.js","sourcesContent":["//@ToDo there is a bug in here in that even if a schema changes and we reload the 'dynamic tab sheet' it doesn't cascade the changes :(\n\nclass NewSchemaForm extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.createSchemaView = this.createSchemaView.bind(this);\n\n        this.state = {\n            schema:\"\"\n        }\n    }\n\n    render(){\n        let form = <form action=\"#\" onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor={\"schema\"}>Schema:</label>\n                    <textarea className={\"form-control\"} rows={\"10\"} id={\"schema\"} value={this.state.schema} onChange={this.handleChange} placeholder={\"Enter JSON Schema\"}></textarea>\n                <button type=\"submit\" className=\"btn btn-primary\">Save changes</button>\n            </div>\n        </form>;\n\n        return form;\n    }\n\n    handleChange(change){\n        this.setState({\n            schema: change.target.value\n        });\n    }\n\n    handleSubmit(event){\n        let obj = JSON.parse(this.state.schema);\n\n        let db = new PouchDB(SCHEMA_DB);\n        db.post(obj, function(err,doc){\n            if(err)\n                console.error(err)\n\n            this.createSchemaView(obj);\n        }.bind(this));\n\n        this.setState({\n            schema:\"\"\n        });\n\n        event.preventDefault();\n    }\n\n    /**\n     * Creates the actual views\n     * @param doc The schema 'by_name' results doc, contains 'key' (title of the schema eg 'Application') and 'id'\n     */\n    createSchemaView(schema){\n        let db = new PouchDB(schema.title);\n\n\n        var designDoc = {\n            _id:'_design/'+schema.title,\n            views:{\n                by_name:{\n                    map:function(doc) {\n                        emit(doc);\n                    }.toString()\n                }\n            }\n        };\n\n        db.put(designDoc, function(err, resp){\n            if(err) {\n                if (err.status != 409)\n                    console.error(err);\n\n                this.props.next();\n            }\n            else {\n                console.log(\"Index for \" + schema.title + \" created.\");\n\n                this.props.next();\n            }\n        }.bind(this));\n    }\n}"]}
{"version":3,"sources":["../../../js/forms/NewSchemaForm.jsx"],"names":["NewSchemaForm","props","handleSubmit","bind","handleChange","state","schema","form","change","setState","target","value","event","obj","JSON","parse","db","PouchDB","SCHEMA_DB","post","err","doc","console","error","debug","title","next","preventDefault","React","Component"],"mappings":";;;;;;;;;;IAAMA,a;;;AACF,2BAAYC,KAAZ,EAAkB;AAAA;;AAAA,kIACRA,KADQ;;AAGd,cAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AACA,cAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;;AAEA,cAAKE,KAAL,GAAa;AACTC,oBAAO;AADE,SAAb;AANc;AASjB;;;;iCAEO;AACJ,gBAAIC,OAAO;AAAA;AAAA,kBAAM,QAAO,GAAb,EAAiB,UAAU,KAAKL,YAAhC;AACP;AAAA;AAAA,sBAAK,WAAU,YAAf;AACI;AAAA;AAAA,0BAAO,SAAS,QAAhB;AAAA;AAAA,qBADJ;AAEQ,sDAAU,WAAW,cAArB,EAAqC,MAAM,IAA3C,EAAiD,IAAI,QAArD,EAA+D,OAAO,KAAKG,KAAL,CAAWC,MAAjF,EAAyF,UAAU,KAAKF,YAAxG,EAAsH,aAAa,mBAAnI,GAFR;AAGI;AAAA;AAAA,0BAAQ,MAAK,QAAb,EAAsB,WAAU,iBAAhC;AAAA;AAAA;AAHJ;AADO,aAAX;;AAQA,mBAAOG,IAAP;AACH;;;qCAEYC,M,EAAO;AAChB,iBAAKC,QAAL,CAAc;AACVH,wBAAQE,OAAOE,MAAP,CAAcC;AADZ,aAAd;AAGH;;;qCAEYC,K,EAAM;AACf,gBAAIC,MAAMC,KAAKC,KAAL,CAAW,KAAKV,KAAL,CAAWC,MAAtB,CAAV;;AAEA,gBAAIU,KAAK,IAAIC,OAAJ,CAAYC,SAAZ,CAAT;;AAEAF,eAAGG,IAAH,CAAQN,GAAR,EAAa,UAASO,GAAT,EAAaC,GAAb,EAAiB;AAC1B,oBAAGD,GAAH,EACIE,QAAQC,KAAR,CAAcH,GAAd,EADJ,KAEI;AACAE,4BAAQE,KAAR,CAAc,gBAAcX,IAAIY,KAAlB,GAAwB,qBAAtC;;AAEA,yBAAKxB,KAAL,CAAWyB,IAAX;AACH;AACJ,aARY,CAQXvB,IARW,CAQN,IARM,CAAb;;AAUAS,kBAAMe,cAAN;AACH;;;;EA9CuBC,MAAMC,S","file":"NewSchemaForm.js","sourcesContent":["class NewSchemaForm extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            schema:\"\"\n        }\n    }\n\n    render(){\n        let form = <form action=\"#\" onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor={\"schema\"}>Schema:</label>\n                    <textarea className={\"form-control\"} rows={\"10\"} id={\"schema\"} value={this.state.schema} onChange={this.handleChange} placeholder={\"Enter JSON Schema\"}></textarea>\n                <button type=\"submit\" className=\"btn btn-primary\">Save changes</button>\n            </div>\n        </form>;\n\n        return form;\n    }\n\n    handleChange(change){\n        this.setState({\n            schema: change.target.value\n        });\n    }\n\n    handleSubmit(event){\n        let obj = JSON.parse(this.state.schema);\n\n        let db = new PouchDB(SCHEMA_DB);\n\n        db.post(obj, function(err,doc){\n            if(err)\n                console.error(err);\n            else{\n                console.debug(\"New Schema \"+obj.title+\" added successfully\");\n\n                this.props.next();\n            }\n        }.bind(this));\n\n        event.preventDefault();\n    }\n\n}"]}
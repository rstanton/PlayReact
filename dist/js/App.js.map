{"version":3,"sources":["../../js/App.jsx"],"names":["App","props","init","bind","createSchemaView","state","view","db","PouchDB","OBJECT_DB","info","err","doc_count","update_seq","console","debug","title","setState","schema","designDoc","_id","views","by_name","map","doc","emit","toString","all","put","resp","status","error","log","React","Component","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;AAAA;;;;;;IAMMA,G;;;AACF,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA,8GACRA,KADQ;;AAGd,cAAKC,IAAL,GAAY,MAAKA,IAAL,CAAUC,IAAV,OAAZ;AACA,cAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,OAAxB;;AAEA,cAAKD,IAAL;;AAEA,cAAKG,KAAL,GAAa;AACTC,kBAAM;AADG,SAAb;AARc;AAWjB;;AAGD;;;;;;;+BAGM;AACF,gBAAIC,KAAK,IAAIC,OAAJ,CAAYC,SAAZ,CAAT;;AAEAF,eAAGG,IAAH,CAAQ,UAASC,GAAT,EAAcD,IAAd,EAAmB;AACvB,oBAAGA,KAAKE,SAAL,IAAgB,CAAhB,IAAqBF,KAAKG,UAAL,IAAiB,CAAzC,EAA2C;AACvCC,4BAAQC,KAAR,CAAc,2BAAd;;AAEA;AACA,yBAAKX,gBAAL,CAAsB,EAACY,OAAM,QAAP,EAAtB;AACA,yBAAKZ,gBAAL,CAAsB,EAACY,OAAM,QAAP,EAAtB;AACA,yBAAKZ,gBAAL,CAAsB,EAACY,OAAM,QAAP,EAAtB;;AAEA,yBAAKC,QAAL,CAAc;AACVX,8BAAK,oBAAC,eAAD;AADK,qBAAd;AAGH,iBAXD,MAYI;AAAE;AACF,yBAAKW,QAAL,CAAc;AACVX,8BAAK,oBAAC,eAAD;AADK,qBAAd;AAGH;AACJ,aAlBO,CAkBNH,IAlBM,CAkBD,IAlBC,CAAR;AAmBH;;AAED;;;;;;;yCAIiBe,M,EAAO;AACpB,gBAAIX,KAAK,IAAIC,OAAJ,CAAYU,OAAOF,KAAnB,CAAT;;AAEA,gBAAIG,YAAY;AACZC,qBAAI,aAAWF,OAAOF,KADV;AAEZK,uBAAM;AACFC,6BAAQ;AACJC,6BAAI,UAASC,GAAT,EAAc;AACd,gCAAGA,IAAIR,KAAP,EAAc;AACVS,qCAAKD,IAAIR,KAAT,EAAgBQ,GAAhB;AACH;AACJ,yBAJG,CAIFE,QAJE;AADA,qBADN;AAQFC,yBAAI;AACAJ,6BAAI,UAASC,GAAT,EAAc;AACdC,iCAAKD,GAAL;AACH,yBAFG,CAEFE,QAFE;AADJ;AARF;AAFM,aAAhB;;AAkBAnB,eAAGqB,GAAH,CAAOT,SAAP,EAAkB,UAASR,GAAT,EAAckB,IAAd,EAAmB;AACjC,oBAAGlB,GAAH,EAAQ;AACJ,wBAAIA,IAAImB,MAAJ,IAAc,GAAlB,EACIhB,QAAQiB,KAAR,CAAcpB,GAAd;AACP,iBAHD,MAIK;AACDG,4BAAQkB,GAAR,CAAY,eAAed,OAAOF,KAAtB,GAA8B,WAA1C;AACH;AACJ,aARiB,CAQhBb,IARgB,CAQX,IARW,CAAlB;AASH;;AAGD;;;;;;;iCAIQ;AACJ,mBAAO;AAAA;AAAA;AACH;AAAA;AAAA,sBAAK,WAAU,WAAf;AACK,yBAAKE,KAAL,CAAWC;AADhB;AADG,aAAP;AAKH;;;;EAzFa2B,MAAMC,S;;AA4FxBC,SAASC,MAAT,CACI,oBAAC,GAAD,OADJ,EAEIC,SAASC,cAAT,CAAwB,MAAxB,CAFJ","file":"App.js","sourcesContent":["/**\r\n * This is the entry point to the 'admin' application\r\n *\r\n * @ToDo - Rethink the relationship model, It doesn't have the same logic as plain objects, so needs it's own management.\r\n * @ToDo - diagrams, do they start as objects?\r\n */\r\nclass App extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.init = this.init.bind(this);\r\n        this.createSchemaView = this.createSchemaView.bind(this);\r\n\r\n        this.init();\r\n\r\n        this.state = {\r\n            view: \"\"\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * This needs to read all the schemas and create the relevant views\r\n     */\r\n    init(){\r\n        let db = new PouchDB(OBJECT_DB);\r\n\r\n        db.info(function(err, info){\r\n            if(info.doc_count==0 && info.update_seq==0){\r\n                console.debug(\"First Boot. Setting up...\");\r\n\r\n                //Hacky, but create the view for the Schema DB\r\n                this.createSchemaView({title:\"Schema\"});\r\n                this.createSchemaView({title:\"Config\"});\r\n                this.createSchemaView({title:\"Object\"});\r\n\r\n                this.setState({\r\n                    view:<DynamicTabSheet/>\r\n                });\r\n            }\r\n            else{ //Database already exists, nothing to do, just show the tabs\r\n                this.setState({\r\n                    view:<DynamicTabSheet/>\r\n                });\r\n            }\r\n        }.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Creates the actual views\r\n     * @param doc The schema 'by_name' results doc, contains 'key' (title of the schema eg 'Application') and 'id'\r\n     */\r\n    createSchemaView(schema){\r\n        let db = new PouchDB(schema.title);\r\n\r\n        var designDoc = {\r\n            _id:'_design/'+schema.title,\r\n            views:{\r\n                by_name:{\r\n                    map:function(doc) {\r\n                        if(doc.title) {\r\n                            emit(doc.title, doc);\r\n                        }\r\n                    }.toString()\r\n                },\r\n                all:{\r\n                    map:function(doc) {\r\n                        emit(doc);\r\n                    }.toString()\r\n                }\r\n            }\r\n        };\r\n\r\n        db.put(designDoc, function(err, resp){\r\n            if(err) {\r\n                if (err.status != 409)\r\n                    console.error(err);\r\n            }\r\n            else {\r\n                console.log(\"Index for \" + schema.title + \" created.\");\r\n            }\r\n        }.bind(this));\r\n    }\r\n\r\n\r\n    /**\r\n     * Adds the navigation, adds a hidden modal for new applications, shows the tabbed screen\r\n     * @returns {XML}\r\n     */\r\n    render(){\r\n        return <div>\r\n            <div className=\"container\">\r\n                {this.state.view}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"]}
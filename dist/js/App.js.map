{"version":3,"sources":["../../js/App.jsx"],"names":["diagramDB","App","props","PouchDB","init","bind","createSchemaView","getSchemas","next","db","query","err","res","console","error","rows","map","key","doc","designDoc","_id","views","by_name","emit","toString","put","status","log","React","Component","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;AAAA,IAAIA,SAAJ;;IAEMC,G;;;AACF,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA,8GACRA,KADQ;;AAGdF,oBAAY,IAAIG,OAAJ,CAAY,UAAZ,CAAZ;;AAEA,cAAKC,IAAL,GAAY,MAAKA,IAAL,CAAUC,IAAV,OAAZ;AACA,cAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,OAAxB;AACA,cAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,OAAlB;;AAEA,cAAKD,IAAL;AATc;AAUjB;;AAGD;;;;;;;+BAGM;AACF,iBAAKG,UAAL,CAAgB,KAAKD,gBAArB;AACH;;AAED;;;;;;;;mCAKWE,I,EAAM;AACb,gBAAIC,KAAK,IAAIN,OAAJ,CAAY,SAAZ,CAAT;;AAEAM,eAAGC,KAAH,CAAS,iBAAT,EAA4B,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC5C,oBAAID,GAAJ,EAAS;AACLE,4BAAQC,KAAR,CAAcH,GAAd;AACH,iBAFD,MAGK;AACDC,wBAAIG,IAAJ,CAASC,GAAT,CAAa,UAASC,GAAT,EAAa;AACtBT,6BAAKS,GAAL;AACH,qBAFD;AAGH;AACJ,aAT2B,CAS1BZ,IAT0B,CASrB,IATqB,CAA5B;AAUH;;AAED;;;;;;;;yCAKiBa,G,EAAI;AACjB,gBAAIT,KAAK,IAAIN,OAAJ,CAAYe,IAAID,GAAhB,CAAT;;AAEA,gBAAIE,YAAY;AACZC,qBAAI,aAAWF,IAAID,GADP;AAEZI,uBAAM;AACFC,6BAAQ;AACJN,6BAAI,UAASE,GAAT,EAAc;AACdK,iCAAKL,GAAL;AACH,yBAFG,CAEFM,QAFE;AADA;AADN;AAFM,aAAhB;;AAWAf,eAAGgB,GAAH,CAAON,SAAP,EAAkB,UAASR,GAAT,EAAcO,GAAd,EAAkB;AAChC,oBAAGP,GAAH,EAAQ;AACJ,wBAAIA,IAAIe,MAAJ,IAAc,GAAlB,EACIb,QAAQC,KAAR,CAAcH,GAAd;AACP,iBAHD,MAKIE,QAAQc,GAAR,CAAY,eAAaR,UAAUF,GAAvB,GAA2B,WAAvC;AACP,aAPD;AASH;;AAGD;;;;;;;iCAIQ;AACJ,mBAAO;AAAA;AAAA;AACH;AAAA;AAAA,sBAAK,WAAU,WAAf;AACI,wCAAC,eAAD;AADJ;AADG,aAAP;AAKH;;;;EAlFaW,MAAMC,S;;AAqFxBC,SAASC,MAAT,CACI,oBAAC,GAAD,OADJ,EAEIC,SAASC,cAAT,CAAwB,MAAxB,CAFJ","file":"App.js","sourcesContent":["var diagramDB;\r\n\r\nclass App extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        diagramDB = new PouchDB(\"diagrams\");\r\n\r\n        this.init = this.init.bind(this);\r\n        this.createSchemaView = this.createSchemaView.bind(this);\r\n        this.getSchemas = this.getSchemas.bind(this);\r\n\r\n        this.init();\r\n    }\r\n\r\n\r\n    /**\r\n     * This needs to read all the schemas and create the relevant views\r\n     */\r\n    init(){\r\n        this.getSchemas(this.createSchemaView);\r\n    }\r\n\r\n    /**\r\n     * This retrieves all schemas....\r\n     * @ToDo move this to utility class so it can be re-used\r\n     * @param next\r\n     */\r\n    getSchemas(next) {\r\n        let db = new PouchDB(\"schemas\");\r\n\r\n        db.query(\"schemas/by_name\", function (err, res) {\r\n            if (err) {\r\n                console.error(err);\r\n            }\r\n            else {\r\n                res.rows.map(function(key){\r\n                    next(key);\r\n                });\r\n            }\r\n        }.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Creates the actual views\r\n     * @param doc The schema 'by_name' results doc, contains 'key' (title of the schema eg 'Application') and 'id'\r\n     * @ToDo there is a bug here - we don't know the name of the field to export, should it just export the whole doc?\r\n     */\r\n    createSchemaView(doc){\r\n        let db = new PouchDB(doc.key);\r\n\r\n        var designDoc = {\r\n            _id:'_design/'+doc.key,\r\n            views:{\r\n                by_name:{\r\n                    map:function(doc) {\r\n                        emit(doc);\r\n                    }.toString()\r\n                }\r\n            }\r\n        };\r\n\r\n        db.put(designDoc, function(err, doc){\r\n            if(err) {\r\n                if (err.status != 409)\r\n                    console.error(err);\r\n            }\r\n            else\r\n                console.log(\"Index for \"+designDoc.key+\" created.\");\r\n        });\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Adds the navigation, adds a hidden modal for new applications, shows the tabbed screen\r\n     * @returns {XML}\r\n     */\r\n    render(){\r\n        return <div>\r\n            <div className=\"container\">\r\n                <DynamicTabSheet/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"]}
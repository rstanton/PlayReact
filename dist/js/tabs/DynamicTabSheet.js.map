{"version":3,"sources":["../../../js/tabs/DynamicTabSheet.jsx"],"names":["DynamicTabSheet","props","componentDidMount","bind","getObjectTypes","state","tabs","tabContent","db","PouchDB","SCHEMA_DB","setState","query","SCHEMA_ALL_VIEW","err","res","console","error","tbs","content","rows","map","schema","debug","JSON","stringify","push","key","title","relationshipSchema","diagramSchema","log","templateSchema","React","Component"],"mappings":"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","file":"DynamicTabSheet.js","sourcesContent":["class DynamicTabSheet extends React.Component{\n    constructor(props){\n        super(props);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.getObjectTypes = this.getObjectTypes.bind(this);\n\n        //tabs the HTML for the tabs, and tabContent the HTML for the tab bodies\n        this.state = {\n            tabs:[],\n            tabContent:[]\n        }\n    }\n\n    componentDidMount(){\n        this.getObjectTypes();\n    }\n\n    render(){\n        return <div id=\"tabs\">\n            <ul className=\"nav nav-tabs\" role=\"tablist\">\n                {this.state.tabs}\n            </ul>\n\n            <div className=\"tab-content\">\n                {this.state.tabContent}\n            </div>\n        </div>\n    }\n\n    /**\n     * Get the objects types from the DB, assign the names and the IDs to some elements by updating the state.\n     */\n    getObjectTypes(){\n        let db = new PouchDB(SCHEMA_DB);\n\n        this.setState({\n            tabs:[],\n            tabContent:[]\n        });\n\n        //Get all the object types that the user has configured and create a tab for each one.\n        db.query(SCHEMA_ALL_VIEW, function(err, res){\n            if(err){\n                console.error(err);\n            }\n            else{\n                let tbs = [];\n                let content = [];\n\n                //Loop each of the Schema objects returned from the Schema DB query\n                res.rows.map(function(schema){\n                    console.debug(\"Creating Sheet for \"+JSON.stringify(schema));\n\n                    //Add a tab\n                    tbs = this.state.tabs;\n                    tbs.push(<li key={schema.key.title} role=\"presentation\"><a href={\"#\"+schema.key.title} aria-controls=\"diagrams\" role=\"tab\" data-toggle=\"tab\">{schema.key.title}</a></li>);\n\n                    //add tab content, use the lister component to update\n                    content = this.state.tabContent;\n                    content.push(<div key={schema.key.title} role=\"tabpanel\" className=\"tab-pane\" id={schema.key.title}>\n                        <GenericLister schema={schema.key} id={schema.key.title} next={this.getObjectTypes}/>\n                    </div>);\n\n                }.bind(this));\n\n\n                /** Objects **/\n                tbs.push(<li key=\"schema\" role=\"presentation\"><a href={\"#schema\"} aria-controls=\"diagrams\" role=\"tab\" data-toggle=\"tab\">Objects</a></li>);\n\n                content.push(<div key={\"schema\"} role=\"tabpanel\" className=\"tab-pane\" id=\"schema\">\n                    <SchemaLister next={this.getObjectTypes} />\n                    <NewSchemaForm next={this.getObjectTypes}/>\n                </div>);\n\n                //Add tabs and tab content for diagrams and relationships\n                tbs.push(<li key=\"relationships\" role=\"presentation\"><a href={\"#\"+relationshipSchema.title} aria-controls=\"diagrams\" role=\"tab\" data-toggle=\"tab\">Relationships</a></li>);\n                content.push(<div key={relationshipSchema.title} role=\"tabpanel\" className=\"tab-pane\" id={relationshipSchema.title}>\n                    <GenericLister schema={relationshipSchema} id={relationshipSchema.title} next={this.getObjectTypes}/>\n                </div>);\n\n                tbs.push(<li key=\"diagrams\" role=\"presentation\"><a href={\"#\"+diagramSchema.title} aria-controls=\"diagrams\" role=\"tab\" data-toggle=\"tab\">Diagrams</a></li>);\n                content.push(<div key={diagramSchema.title} role=\"tabpanel\" className=\"tab-pane\" id={diagramSchema.title}>\n                    <GenericLister schema={diagramSchema} id={diagramSchema.title} next={this.getObjectTypes}/>\n                </div>);\n\n\n                console.log(\"Adding Templates\");\n\n                tbs.push(<li key=\"templates\" role=\"presentation\"><a href={\"#\"+templateSchema.title} aria-controls=\"diagrams\" role=\"tab\" data-toggle=\"tab\">Templates</a></li>);\n                content.push(<div key={templateSchema.title} role=\"tabpanel\" className=\"tab-pane\" id={templateSchema.title}>\n                    <GenericLister schema={templateSchema} id={templateSchema.title} next={this.getObjectTypes}/>\n                </div>);\n\n\n                /**tbs.push(<li key=\"diagrams\" role=\"presentation\"><a href={\"#diagrams\"} aria-controls=\"diagrams\" role=\"tab\" data-toggle=\"tab\">Diagrams</a></li>);\n                content.push(<div key=\"diagrams\" role=\"tabpanel\" className=\"tab-pane\" id=\"diagrams\"><DiagramLister/></div>);**/\n\n                this.setState({\n                    tabs:tbs,\n                    tabContent: content\n                });\n            }\n        }.bind(this))\n    }\n}"]}
{"version":3,"sources":["../../../../js/dialogs/ReuseDialog/ReuseDialog.jsx"],"names":["ReuseDialog","props","componentDidMount","bind","$","id","dialog","autoOpen","closeOnEscape","title","modal","width","height","resizable","draggable","helper","appendTo","zIndex","droppable","greedy","drop","event","ui","console","log","activate","React","Component"],"mappings":";;;;;;;;;;AAAA;;;;;;IAMMA,W;;;AACF,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA,8HACRA,KADQ;;AAGd,cAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;AAHc;AAIjB;;;;4CAEkB;;AAEfC,cAAE,MAAI,KAAKH,KAAL,CAAWI,EAAjB,EAAqBC,MAArB,CAA4B;AACxBC,0BAAU,KADc;AAExBC,+BAAe,IAFS;AAGxBC,uBAAM,KAAKR,KAAL,CAAWQ,KAHO;AAIxBC,uBAAO,KAAKT,KAAL,CAAWS,KAJM;AAKxBC,uBAAM,GALkB;AAMxBC,wBAAO,GANiB;AAOxBC,2BAAU;AAPc,aAA5B;;AAUAT,cAAE,MAAI,KAAKH,KAAL,CAAWI,EAAjB,EAAqBC,MAArB,CAA4B,MAA5B;;AAEAF,cAAE,YAAF,EAAgBU,SAAhB,CAA0B;AACtBC,wBAAQ,OADc;AAEtBC,0BAAU,MAFY;AAGtBC,wBAAQ;AAHc,aAA1B;;AAMAb,cAAE,MAAI,WAAN,EAAmBc,SAAnB,CAA6B;AACzBC,wBAAO,IADkB;AAEzBC,sBAAK,cAASC,KAAT,EAAeC,EAAf,EAAkB;AACnBC,4BAAQC,GAAR,CAAY,SAAZ;AACH,iBAJwB;AAKzBC,0BAAS,kBAASJ,KAAT,EAAgBC,EAAhB,EAAmB;AACxBC,4BAAQC,GAAR,CAAY,QAAZ;AACH;AAPwB,aAA7B;AASH;;;iCACO;AACJ,mBAAO;AAAA;AAAA,kBAAK,IAAI,KAAKvB,KAAL,CAAWI,EAApB,EAAwB,OAAO,KAAKJ,KAAL,CAAWQ,KAA1C;AACH;AAAA;AAAA;AACI;AAAA;AAAA,0BAAK,WAAU,aAAf,EAA6B,IAAG,WAAhC,EAA4C,MAAK,SAAjD,EAA2D,wBAAqB,MAAhF;AACI;AAAA;AAAA,8BAAK,WAAU,qBAAf;AACI;AAAA;AAAA,kCAAK,WAAU,eAAf,EAA+B,MAAK,KAApC,EAA0C,IAAG,YAA7C;AACI;AAAA;AAAA,sCAAI,WAAU,aAAd;AACI;AAAA;AAAA,0CAAG,MAAK,QAAR,EAAiB,eAAY,UAA7B,EAAwC,eAAY,YAApD,EAAiE,MAAK,cAAtE,EAAqF,iBAAc,MAAnG,EAA0G,iBAAc,aAAxH;AAAA;AAAA;AADJ;AADJ,6BADJ;AAQI;AAAA;AAAA,kCAAK,IAAG,aAAR,EAAsB,WAAU,4BAAhC,EAA6D,MAAK,UAAlE,EAA6E,mBAAgB,YAA7F;AACI;AAAA;AAAA,sCAAK,IAAG,WAAR,EAAoB,WAAU,YAA9B;AAAA;AAAA;AADJ;AARJ;AADJ;AADJ;AADG,aAAP;AAoBH;;;;EA1DqBiB,MAAMC,S","file":"ReuseDialog.js","sourcesContent":["/**\n * Re use dialog\n * props:\n *  id\n *  modal: false\n */\nclass ReuseDialog extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n    }\n\n    componentDidMount(){\n\n        $(\"#\"+this.props.id).dialog({\n            autoOpen: false,\n            closeOnEscape: true,\n            title:this.props.title,\n            modal: this.props.modal,\n            width:500,\n            height:500,\n            resizable:false\n        });\n\n        $(\"#\"+this.props.id).dialog(\"open\");\n\n        $(\"#draggable\").draggable({\n            helper: 'clone',\n            appendTo: 'body',\n            zIndex: 150\n        });\n\n        $(\"#\"+\"container\").droppable({\n            greedy:true,\n            drop:function(event,ui){\n                console.log(\"Dropped\");\n            },\n            activate:function(event, ui){\n                console.log(\"Active\");\n            }\n        });\n    }\n    render(){\n        return <div id={this.props.id} title={this.props.title}>\n            <div>\n                <div className=\"panel-group\" id=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\">\n                    <div className=\"panel panel-default\">\n                        <div className=\"panel-heading\" role=\"tab\" id=\"headingOne\">\n                            <h4 className=\"panel-title\">\n                                <a role=\"button\" data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                                    Object Name (Title from Schema?)\n                                </a>\n                            </h4>\n                        </div>\n                        <div id=\"collapseOne\" className=\"panel-collapse collapse in\" role=\"tabpanel\" aria-labelledby=\"headingOne\">\n                            <div id=\"draggable\" className=\"panel-body\">\n                                This of Objects\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>;\n    }\n}"]}
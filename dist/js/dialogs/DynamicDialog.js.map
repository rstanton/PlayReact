{"version":3,"sources":["../../../js/dialogs/DynamicDialog.jsx"],"names":["DynamicDialog","props","onSchemaChange","bind","handleSubmit","handleChange","state","form","schema","console","log","JSON","stringify","id","title","event","parse","target","options","selectedIndex","dataset","setState","$","data","db","PouchDB","OBJECT_DB","Dialog"],"mappings":";;;;;;;;;;AAAA;;;IAGMA,a;;;AACF,2BAAYC,KAAZ,EAAkB;AAAA;;AAAA,kIACRA,KADQ;;AAGd,cAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,OAAtB;AACA,cAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AACA,cAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,OAApB;;AAEA,cAAKG,KAAL,GAAa;AACTC,kBAAK,EADI;AAETC,oBAAO;AAFE,SAAb;;AAPc;AAYjB;;;;iCAEO;AACJC,oBAAQC,GAAR,CAAY,eAAaC,KAAKC,SAAL,CAAe,KAAKN,KAAL,CAAWE,MAA1B,CAAzB;;AAEA,mBAAO;AAAA;AAAA,kBAAK,IAAI,KAAKP,KAAL,CAAWY,EAApB,EAAwB,OAAO,KAAKZ,KAAL,CAAWa,KAA1C;AACH;AAAA;AAAA;AACI,wCAAC,mBAAD,IAAqB,IAAI,cAAzB,EAAyC,UAAU,KAAKZ,cAAxD,GADJ;AAEI;AAAA;AAAA,0BAAM,QAAO,GAAb,EAAiB,UAAU,KAAKE,YAAhC;AACI;AAAA;AAAA,8BAAK,WAAU,YAAf;AACI,gDAAC,iBAAD,IAAmB,UAAU,KAAKC,YAAlC,EAAgD,QAAQ,KAAKC,KAAL,CAAWE,MAAnE;AADJ,yBADJ;AAII;AAAA;AAAA,8BAAQ,MAAK,QAAb,EAAsB,WAAU,iBAAhC;AAAA;AAAA;AAJJ,qBAFJ;AAQI;AAAA;AAAA;AAAMG,6BAAKC,SAAL,CAAe,KAAKN,KAAL,CAAWE,MAA1B;AAAN;AARJ;AADG,aAAP;AAYH;;;uCAEcO,K,EAAM;AACjB,gBAAIP,SAASG,KAAKK,KAAL,CAAWD,MAAME,MAAN,CAAaC,OAAb,CAAqBH,MAAME,MAAN,CAAaE,aAAlC,EAAiDC,OAAjD,CAAyDZ,MAApE,CAAb;AACAC,oBAAQC,GAAR,CAAY,6BAA2BF,OAAOM,KAA9C;;AAEA,iBAAKO,QAAL,CAAc;AACVb,wBAAOA;AADG,aAAd;AAIH;;;qCAEYO,K,EAAM;AACfN,oBAAQC,GAAR,CAAY,eAAaK,MAAME,MAAN,CAAaJ,EAAtC;AACAJ,oBAAQC,GAAR,CAAY,CAACY,EAAE,MAAIP,MAAME,MAAN,CAAaJ,EAAnB,EAAuBU,IAAvB,CAA4B,OAA5B,CAAD,CAAZ,EAFe,CAEsC;AACxD;;AAED;;;;qCACaR,K,EAAM;AACf,gBAAIS,KAAK,IAAIC,OAAJ,CAAYC,SAAZ,CAAT;AACH;;;;EAlDuBC,M","file":"DynamicDialog.js","sourcesContent":["/**\n *\n */\nclass DynamicDialog extends Dialog{\n    constructor(props){\n        super(props);\n\n        this.onSchemaChange = this.onSchemaChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            form:[],\n            schema:{}\n        };\n\n    }\n\n    render(){\n        console.log(\"Rendering \"+JSON.stringify(this.state.schema));\n\n        return <div id={this.props.id} title={this.props.title}>\n            <div>\n                <GenericObjectLister id={\"SchemaLister\"} onChange={this.onSchemaChange}/>\n                <form action=\"#\" onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <DynamicObjectForm onChange={this.handleChange} schema={this.state.schema}/>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                </form>\n                <pre>{JSON.stringify(this.state.schema)}</pre>\n            </div>\n        </div>;\n    }\n\n    onSchemaChange(event){\n        let schema = JSON.parse(event.target.options[event.target.selectedIndex].dataset.schema);\n        console.log(\"Changing object type to \"+schema.title);\n\n        this.setState({\n            schema:schema\n        });\n\n    }\n\n    handleChange(event){\n        console.log(\"Change in \"+event.target.id);\n        console.log([$(\"#\"+event.target.id).data(\"title\")]); //:event.target.value\n    }\n\n    //@ToDo handle database submission...\n    handleSubmit(event){\n        let db = new PouchDB(OBJECT_DB);\n    }\n}"]}
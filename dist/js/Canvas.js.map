{"version":3,"sources":["../../js/Canvas.jsx"],"names":["view","appDB","Canvas","props","componentDidMount","bind","PouchDB","width","height","View","id","setScrollArea","style","next","obj","$","dialog","console","log","JSON","stringify","rect","draw2d","shape","basic","Rectangle","label","Label","text","appName","add","layout","locator","BottomLocator","React","Component","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;AAAA,IAAIA,IAAJ;AACA,IAAIC,KAAJ;;IAEMC,M;;;AAEF,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA,oHACRA,KADQ;;AAGd,cAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;;AAEAJ,gBAAQ,IAAIK,OAAJ,CAAY,cAAZ,CAAR;AALc;AAMjB;;;;4CAEkB;AACf,gBAAIC,QAAQ,IAAZ;AACA,gBAAIC,SAAS,IAAb;;AAEAR,mBAAO,IAAIS,IAAJ,CAAS,KAAKN,KAAL,CAAWO,EAApB,EAAwBH,KAAxB,EAA+BC,MAA/B,CAAP;AACAR,iBAAKW,aAAL,CAAmB,MAAI,KAAKR,KAAL,CAAWO,EAAlC;AACH;;;iCAGO;AACJ,gBAAIE,QAAM;AACNL,uBAAM,QADA;AAENC,wBAAO;AAFD,aAAV;;AAKA,mBAAO;AAAA;AAAA;AACH,oCAAC,SAAD,IAAW,MAAM,KAAKK,IAAL,CAAUR,IAAV,CAAe,IAAf,CAAjB,EAAuC,OAAM,MAA7C,EAAoD,IAAG,iBAAvD,EAAyE,OAAM,YAA/E,EAA4F,MAAK,iBAAjG,GADG;AAEH,oCAAC,oBAAD,IAAsB,OAAO,IAA7B,EAAmC,MAAM,KAAKQ,IAAL,CAAUR,IAAV,CAAe,IAAf,CAAzC,EAA+D,OAAM,MAArE,EAA4E,IAAG,mBAA/E,EAAmG,OAAM,cAAzG,EAAwH,MAAK,mBAA7H,GAFG;AAGH;AAAA;AAAA,sBAAK,IAAI,KAAKF,KAAL,CAAWO,EAAX,GAAgB,YAAzB;AACI,iDAAK,OAAOE,KAAZ,EAAmB,IAAI,KAAKT,KAAL,CAAWO,EAAlC;AADJ;AAHG,aAAP;AAMH;;;6BAEII,G,EAAI;AACLC,cAAE,oBAAF,EAAwBC,MAAxB,CAA+B,OAA/B;AACAC,oBAAQC,GAAR,CAAYC,KAAKC,SAAL,CAAeN,GAAf,CAAZ;AACA,gBAAIO,OAAO,IAAIC,OAAOC,KAAP,CAAaC,KAAb,CAAmBC,SAAvB,EAAX;AACA,gBAAIC,QAAQ,IAAIJ,OAAOC,KAAP,CAAaC,KAAb,CAAmBG,KAAvB,CAA6B,EAACC,MAAKd,IAAIJ,EAAJ,GAAO,GAAP,GAAWI,IAAIe,OAArB,EAA7B,CAAZ;AACAR,iBAAKS,GAAL,CAASJ,KAAT,EAAgB,IAAIJ,OAAOS,MAAP,CAAcC,OAAd,CAAsBC,aAA1B,EAAhB;;AAEAjC,iBAAK8B,GAAL,CAAST,IAAT;AACH;;;;EAzCgBa,MAAMC,S;;AA4C3BC,SAASC,MAAT,CACI;AAAA;AAAA;AACI,wBAAC,MAAD,IAAQ,IAAG,QAAX;AADJ,CADJ,EAIIC,SAASC,cAAT,CAAwB,MAAxB,CAJJ","file":"Canvas.js","sourcesContent":["var view;\nvar appDB;\n\nclass Canvas extends React.Component{\n\n    constructor(props){\n        super(props);\n\n        this.componentDidMount = this.componentDidMount.bind(this)\n\n        appDB = new PouchDB(\"applications\");\n    }\n\n    componentDidMount(){\n        let width = 2000;\n        let height = 2000;\n\n        view = new View(this.props.id, width, height);\n        view.setScrollArea(\"#\"+this.props.id);\n    }\n\n\n    render(){\n        let style={\n            width:\"2000px\",\n            height:\"2000px\"\n        };\n\n        return <div>\n            <IntDialog next={this.next.bind(this)} modal=\"true\" id=\"interfaceDialog\" title=\"Interfaces\" body=\"Interfaces Here\"/>\n            <NewApplicationDialog reuse={true} next={this.next.bind(this)} modal=\"true\" id=\"applicationDialog\" title=\"Applications\" body=\"Applications Here\"/>\n            <div id={this.props.id + \"_container\"}>\n                <div style={style} id={this.props.id} /></div>\n            </div>\n    }\n\n    next(obj){\n        $(\"#applicationDialog\").dialog(\"close\");\n        console.log(JSON.stringify(obj));\n        let rect = new draw2d.shape.basic.Rectangle();\n        let label = new draw2d.shape.basic.Label({text:obj.id+\" \"+obj.appName});\n        rect.add(label, new draw2d.layout.locator.BottomLocator());\n\n        view.add(rect);\n    }\n}\n\nReactDOM.render(\n    <div>\n        <Canvas id=\"canvas\"/>\n    </div>,\n    document.getElementById('root')\n);\n"]}
{"version":3,"sources":["../../js/Canvas.jsx"],"names":["Canvas","props","componentDidMount","bind","init","schemas","view","width","height","View","id","setScrollArea","db","PouchDB","SCHEMA_DB","query","SCHEMA_ALL_VIEW","err","res","console","debug","rows","length","map","obj","canvasStyle","floatStyle","position","left","top","zIndex","React","Component","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;IAAMA,M;;;AAEF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACTA,KADS;;AAGf,cAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;AACA,cAAKC,IAAL,GAAY,MAAKA,IAAL,CAAUD,IAAV,OAAZ;;AAEA,cAAKE,OAAL,GAAe,EAAf;AACA,cAAKC,IAAL,GAAY,EAAZ;;AAEA,cAAKF,IAAL;AATe;AAUlB;;;;4CAImB;AAChB,gBAAIG,QAAQ,IAAZ;AACA,gBAAIC,SAAS,IAAb;;AAEA,iBAAKF,IAAL,GAAY,IAAIG,IAAJ,CAAS,KAAKR,KAAL,CAAWS,EAApB,EAAwBH,KAAxB,EAA+BC,MAA/B,CAAZ;AACA,iBAAKF,IAAL,CAAUK,aAAV,CAAwB,MAAM,KAAKV,KAAL,CAAWS,EAAzC;AACH;;AAED;;;;;;+BAGM;AACF,gBAAIE,KAAK,IAAIC,OAAJ,CAAYC,SAAZ,CAAT;;AAEAF,eAAGG,KAAH,CAASC,eAAT,EAA0B,UAASC,GAAT,EAAaC,GAAb,EAAiB;AACvCC,wBAAQC,KAAR,CAAc,SAAOF,IAAIG,IAAJ,CAASC,MAAhB,GAAuB,UAArC;;AAEA,oBAAIjB,UAAUa,IAAIG,IAAJ,CAASE,GAAT,CAAa,UAASC,GAAT,EAAa;AACpC,2BAAOA,GAAP;AACH,iBAF0B,CAEzBrB,IAFyB,CAEpB,IAFoB,CAAb,CAAd;;AAIA,qBAAKE,OAAL,GAAeA,OAAf;;AAEAO,qBAAK,IAAL;AACH,aAVyB,CAUxBT,IAVwB,CAUnB,IAVmB,CAA1B;AAWH;;;iCAEQ;AACL,gBAAIsB,cAAc;AACdlB,uBAAO,QADO;AAEdC,wBAAQ;AAFM,aAAlB;;AAKA,gBAAIkB,aAAa;AACbC,0BAAU,QADG;AAEbC,sBAAM,MAFO;AAGbC,qBAAK,MAHQ;AAIbC,wBAAO;AAJM,aAAjB;;AAOA,mBAAO;AAAA;AAAA;AACH,8CAAM,OAAOJ,UAAb,EAAyB,WAAU,+BAAnC,EAAmE,eAAY,MAA/E,GADG;AAEH,oCAAC,MAAD,OAFG;AAGH;AAAA;AAAA,sBAAK,IAAI,KAAKzB,KAAL,CAAWS,EAAX,GAAgB,YAAzB;AACI,iDAAK,OAAOe,WAAZ,EAAyB,IAAI,KAAKxB,KAAL,CAAWS,EAAxC;AADJ;AAHG,aAAP;AAOH;;;;EA/DgBqB,MAAMC,S;;AAkE3BC,SAASC,MAAT,CACI;AAAA;AAAA;AACI,wBAAC,MAAD,IAAQ,IAAG,QAAX;AADJ,CADJ,EAIIC,SAASC,cAAT,CAAwB,MAAxB,CAJJ","file":"Canvas.js","sourcesContent":["class Canvas extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.componentDidMount = this.componentDidMount.bind(this)\n        this.init = this.init.bind(this);\n\n        this.schemas = [];\n        this.view = {};\n\n        this.init();\n    }\n\n\n\n    componentDidMount() {\n        let width = 3000;\n        let height = 3000;\n\n        this.view = new View(this.props.id, width, height);\n        this.view.setScrollArea(\"#\" + this.props.id);\n    }\n\n    /**\n     * Read all the schemas and make them available to the rest of the app\n     */\n    init(){\n        let db = new PouchDB(SCHEMA_DB);\n\n        db.query(SCHEMA_ALL_VIEW, function(err,res){\n            console.debug(\"Got \"+res.rows.length+\" schemas\");\n\n            let schemas = res.rows.map(function(obj){\n                return obj;\n            }.bind(this));\n\n            this.schemas = schemas;\n\n            db = null;\n        }.bind(this));\n    }\n\n    render() {\n        let canvasStyle = {\n            width: \"3000px\",\n            height: \"3000px\"\n        };\n\n        let floatStyle = {\n            position: \"sticky\",\n            left: \"10px\",\n            top: \"10px\",\n            zIndex:\"1000\"\n        };\n\n        return <div>\n            <span style={floatStyle} className=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n            <NavBar/>\n            <div id={this.props.id + \"_container\"}>\n                <div style={canvasStyle} id={this.props.id}/>\n            </div>\n        </div>\n    }\n}\n\nReactDOM.render(\n    <div>\n        <Canvas id=\"canvas\"/>\n    </div>,\n    document.getElementById('root')\n);\n"]}
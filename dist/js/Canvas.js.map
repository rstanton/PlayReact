{"version":3,"sources":["../../js/Canvas.jsx"],"names":["Canvas","props","componentDidMount","bind","init","getSchemas","getTemplate","getObjects","schemas","template","diagrams","objects","view","width","height","View","id","setScrollArea","db","PouchDB","SCHEMA_DB","query","SCHEMA_ALL_VIEW","err","res","console","log","rows","map","obj","templateName","OBJECT_DB","OBJECT_BY_TYPE","keys","error","value","allowedObjects","key","list","row","canvasStyle","floatStyle","position","left","top","zIndex","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"Canvas.js","sourcesContent":["class Canvas extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.componentDidMount = this.componentDidMount.bind(this)\n        this.init = this.init.bind(this);\n        this.getSchemas = this.getSchemas.bind(this);\n        this.getTemplate = this.getTemplate.bind(this);\n        this.getObjects = this.getObjects.bind(this);\n\n        this.schemas = [];\n        this.template = {};\n        this.diagrams = [];\n        this.objects = {};\n        this.view = {};\n\n        this.init();\n    }\n\n    componentDidMount() {\n        let width = 3000;\n        let height = 3000;\n\n        this.view = new View(this.props.id, width, height);\n        this.view.setScrollArea(\"#\" + this.props.id);\n\n\n\n    }\n\n\n    getSchemas(){\n        let db = new PouchDB(SCHEMA_DB);\n\n        db.query(SCHEMA_ALL_VIEW, function(err,res){\n            if(err) {\n                console.log(err)\n            }\n            else {\n                let schemas = res.rows.map(function (obj) {\n                    return obj;\n                }.bind(this));\n\n                this.schemas = schemas;\n\n                db = null;\n            }\n        }.bind(this));\n    }\n\n    getTemplate(templateName){\n        let db = new PouchDB(OBJECT_DB);\n\n        //Get the template for the diagram\n        console.log(\"Loading Template: \"+templateName);\n\n        db.query(OBJECT_BY_TYPE, {keys: [templateName, \"http://architecture.com/Template\"]}, function(err,res){\n            if(err)\n                console.error(err);\n            else{\n                this.template = res.rows[0].value;\n                this.getObjects(this.template.allowedObjects);\n            }\n        }.bind(this));\n    }\n\n    /**\n     *\n     * @param allowedObjects A list of string which represents the 'type' of allowed objects, eg \"http://architecture.com/Application\"\n     */\n    getObjects(allowedObjects){\n        let db = new PouchDB(OBJECT_DB);\n\n        allowedObjects.map(function(obj){\n            db.query(OBJECT_BY_TYPE, {key: obj}, function (err, res) {\n                if (err)\n                    console.error(err);\n                else {\n                    let list = res.rows.map(function (row) {\n                        return row.value;\n                    });\n\n                    this.objects[obj] = list;\n                }\n            }.bind(this));\n        }.bind(this))\n    }\n    /**\n     * Read all the schemas and make them available to the rest of the app\n     * @ToDo ... parameterise, hardcoded at the minute\n     */\n    init(){\n        this.getSchemas();\n        this.getTemplate(\"App Comms Diagram Template\");\n    }\n\n    render() {\n        let canvasStyle = {\n            width: \"3000px\",\n            height: \"3000px\"\n        };\n\n        let floatStyle = {\n            position: \"sticky\",\n            left: \"10px\",\n            top: \"10px\",\n            zIndex:\"1000\"\n        };\n\n        return <div id=\"container\" className={\"container-fluid\"}>\n            <ReuseDialog id={\"reuseDialog\"} title={\"Reuse Objects\"} modal={false}/>\n            <div id={this.props.id + \"_container\"}>\n                <div style={canvasStyle} id={this.props.id} className={\"ui-droppable\"}/>\n            </div>\n        </div>;\n    }\n}\n\nReactDOM.render(\n    <div>\n        <Canvas id=\"canvas\"/>\n    </div>,\n    document.getElementById('root')\n);\n"]}
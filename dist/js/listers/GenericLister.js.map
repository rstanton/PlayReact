{"version":3,"sources":["../../../js/listers/GenericLister.jsx"],"names":["GenericLister","props","componentDidMount","bind","getSchema","getData","state","head","body","schema","db","PouchDB","title","query","err","res","console","error","td","next","get","id","doc","properties","th","x","push","setState","React","Component"],"mappings":";;;;;;;;;;AAAA;;;;;;;IAOMA,a;;;AACF,2BAAYC,KAAZ,EAAkB;AAAA;;AAAA,kIACRA,KADQ;;AAGd,cAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;AACA,cAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,OAAjB;AACA,cAAKE,OAAL,GAAe,MAAKA,OAAL,CAAaF,IAAb,OAAf;;AAEA,cAAKG,KAAL,GAAa;AACTC,kBAAK,EADI;AAETC,kBAAK;AAFI,SAAb;;AAKA,cAAKC,MAAL,GAAc,EAAd;AAZc;AAejB;;;;4CAEkB;AACf;AACA,iBAAKL,SAAL,CAAe,KAAKC,OAApB;AACH;;;kCAEQ;AACL,gBAAIK,KAAK,IAAIC,OAAJ,CAAY,KAAKF,MAAL,CAAYG,KAAxB,CAAT;;AAEAF,eAAGG,KAAH,CAAS,KAAKJ,MAAL,CAAYG,KAAZ,GAAkB,UAA3B,EAAuC,UAASE,GAAT,EAAaC,GAAb,EAAiB;AACpD,oBAAGD,GAAH,EAAO;AACHE,4BAAQC,KAAR,CAAcH,GAAd;AACH,iBAFD,MAGI;AACA,wBAAII,KAAK,EAAT;AAEH;AACJ,aARsC,CAQrCf,IARqC,CAQhC,IARgC,CAAvC;AASH;;;kCAGSgB,I,EAAK;AACX,gBAAIT,KAAK,IAAIC,OAAJ,CAAY,SAAZ,CAAT;AACA,gBAAIF,SAAS,EAAb;AACAC,eAAGU,GAAH,CAAO,KAAKnB,KAAL,CAAWoB,EAAlB,EAAsB,UAASP,GAAT,EAAcQ,GAAd,EAAkB;AACpC,oBAAGR,GAAH,EAAO;AACHE,4BAAQC,KAAR,CAAcH,GAAd;AACH,iBAFD,MAGI;AACA,yBAAKL,MAAL,GAAca,GAAd;;AAEA,wBAAIrB,QAAQqB,IAAIC,UAAhB;;AAEA,wBAAIC,KAAG,EAAP;AACA,yBAAI,IAAIC,CAAR,IAAaxB,KAAb,EAAmB;AACfuB,2BAAGE,IAAH,CAAQ;AAAA;AAAA,8BAAI,KAAKD,CAAT;AAAaA;AAAb,yBAAR;AACH;;AAED,yBAAKE,QAAL,CAAc;AACVpB,8BAAKiB;AADK,qBAAd;AAGH;AACD;AACAL;AACH,aApBqB,CAoBpBhB,IApBoB,CAoBf,IApBe,CAAtB;AAsBH;;;iCAEO;AACJ,mBAAO;AAAA;AAAA;AACH;AAAA;AAAA,sBAAO,WAAU,qBAAjB;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAK,iCAAKG,KAAL,CAAWC;AAAhB;AADJ,qBADJ;AAII;AAAA;AAAA;AACC,6BAAKD,KAAL,CAAWE;AADZ;AAJJ;AADG,aAAP;AAUH;;;;EA5EuBoB,MAAMC,S","file":"GenericLister.js","sourcesContent":["/**\n * Props will contain the ID of the schema object that describes the resource to be displayed\n * - Get the schema\n * - Open a connection to the relevant database\n * - Query for all objects\n * - Display a table containing the relevant properties\n */\nclass GenericLister extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.getSchema = this.getSchema.bind(this);\n        this.getData = this.getData.bind(this);\n\n        this.state = {\n            head:[],\n            body:[]\n        };\n\n        this.schema = {\n\n        };\n    }\n\n    componentDidMount(){\n        //Reads the table header\n        this.getSchema(this.getData);\n    }\n\n    getData(){\n        let db = new PouchDB(this.schema.title);\n\n        db.query(this.schema.title+\"/by_name\", function(err,res){\n            if(err){\n                console.error(err);\n            }\n            else{\n                let td = [];\n\n            }\n        }.bind(this));\n    }\n\n\n    getSchema(next){\n        let db = new PouchDB(\"schemas\");\n        let schema = {};\n        db.get(this.props.id, function(err, doc){\n            if(err){\n                console.error(err);\n            }\n            else{\n                this.schema = doc;\n\n                let props = doc.properties;\n\n                let th=[];\n                for(let x in props){\n                    th.push(<th key={x}>{x}</th>);\n                }\n\n                this.setState({\n                    head:th\n                });\n            }\n            //now populate the table\n            next();\n        }.bind(this));\n\n    }\n\n    render(){\n        return <div>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>{this.state.head}</tr>\n                </thead>\n                <tbody>\n                {this.state.body}\n                </tbody>\n            </table>\n        </div>\n    }\n}"]}
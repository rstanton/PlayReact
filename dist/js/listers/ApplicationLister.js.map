{"version":3,"sources":["../../../js/listers/ApplicationLister.jsx"],"names":["ApplicationLister","props","componentDidMount","bind","delete","getApplications","showDialog","state","list","$","dialog","obj","setState","appDB","PouchDB","query","err","res","console","error","rows","map","key","id","n","length","get","doc","arr","push","_id","appName","appVendor","log","remove","response","React","Component"],"mappings":"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","file":"ApplicationLister.js","sourcesContent":["class ApplicationLister extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.delete = this.delete.bind(this);\n        this.getApplications = this.getApplications.bind(this);\n        this.showDialog = this.showDialog.bind(this);\n\n        this.state = {\n            list:[]\n        }\n\n    }\n\n\n    render(){\n        return <div>\n\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr><th>#</th><th>Name</th><th>Vendor</th><th>\n                        <span onClick={() => this.getApplications()} className=\"glyphicon glyphicon-refresh\" aria-hidden=\"true\"></span>\n                        <span onClick={() => this.showDialog()} className=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n                    </th></tr>\n                </thead>\n                <tbody>\n                    {this.state.list}\n                </tbody>\n            </table>\n        </div>\n    }\n\n    showDialog(){\n        $(\"#AppModal\").dialog(\"open\");\n    }\n\n    componentDidMount(){\n        this.getApplications();\n    }\n\n    /**\n     *\n     * @param obj If this function is called as the return from NewApplicationDialog then obj is the application. Otherwise it's null. Basically ignore it all time!\n     */\n    getApplications(obj){\n        $(\"#AppModal\").dialog(\"close\");\n\n        //Clear the current state\n        this.setState({\n            list:[]\n        });\n\n        let appDB = new PouchDB(\"applications\");\n        //Get all documents in the database index\n        appDB.query(\"applications/by_name\", function(err, res){\n            if(err)\n                console.error(err);\n\n            //get a list of all the ids\n            var list = [];\n            list = res.rows.map(function(key){\n                return key.id;\n            });\n\n            for(let n=0;n<list.length; n++) {\n                appDB.get(list[n], function (err, doc) {\n                    if (err)\n                        console.error(err);\n\n                    //get the current array and add a new entry on the end\n                    var arr = this.state.list;\n                    arr.push(<tr key={doc._id}><td>{doc._id}</td><td>{doc.appName}</td><td>{doc.appVendor}</td><td><span onClick={() => this.delete(doc._id)} className=\"glyphicon glyphicon-trash\" aria-hidden=\"true\"></span></td></tr>);\n\n                    //save to the state\n                    this.setState({list: arr});\n\n                }.bind(this));\n            }\n        }.bind(this));\n    }\n\n    /**\n     * Removes the application from the database that is associated with the specified application ID then refreshes the view state based on the updated DB contents\n     * @param id\n     */\n    delete(id){\n        console.log(\"Delete Request for \"+id);\n\n        appDB.get(id, function(err, doc){\n            appDB.remove(doc, function(err, response){\n                if(err)\n                    console.error(err);\n\n                this.getApplications();\n\n            }.bind(this));\n        }.bind(this));\n    }\n}"]}
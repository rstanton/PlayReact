{"version":3,"sources":["../../../js/listers/SchemaLister.jsx"],"names":["SchemaLister","props","getSchemas","bind","componentDidMount","state","schemas","db","PouchDB","setState","query","err","res","console","error","list","rows","map","obj","id","x","get","doc","arr","push","_id","title","JSON","stringify","undefined","close","view","showDialog","React","Component"],"mappings":";;;;;;;;;;IAAMA,Y;;;AACF,0BAAYC,KAAZ,EAAkB;AAAA;;AAAA,gIACRA,KADQ;;AAGd,cAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,OAAlB;AACA,cAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,OAAzB;;AAEA,cAAKE,KAAL,GAAa;AACTC,qBAAQ;AADC,SAAb;AANc;AASjB;;;;4CAEkB;AACf,iBAAKJ,UAAL;AACH;;;qCAEW;AACR,gBAAIK,KAAK,IAAIC,OAAJ,CAAY,SAAZ,CAAT;AACA,iBAAKC,QAAL,CAAc;AACVH,yBAAQ;AADE,aAAd;;AAIAC,eAAGG,KAAH,CAAS,iBAAT,EAA4B,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC3C,oBAAGD,GAAH,EACIE,QAAQC,KAAR,CAAcH,GAAd,EADJ,KAEK;AACD,wBAAII,OAAO,EAAX;AACAA,2BAAOH,IAAII,IAAJ,CAASC,GAAT,CAAa,UAAUC,GAAV,EAAe;AAC/B,+BAAOA,IAAIC,EAAX;AACH,qBAFM,CAAP;;AAFC;AAAA;AAAA;;AAAA;AAMD,6CAAaJ,IAAb,8HAAkB;AAAA,gCAAVK,CAAU;;AACdb,+BAAGc,GAAH,CAAOD,CAAP,EAAU,UAAST,GAAT,EAAcW,GAAd,EAAkB;AACxB,oCAAGX,GAAH,EACIE,QAAQC,KAAR,CAAcH,GAAd,EADJ,KAEI;AACA,wCAAIY,MAAM,KAAKlB,KAAL,CAAWC,OAArB;AACAiB,wCAAIC,IAAJ,CAAS;AAAA;AAAA,0CAAI,KAAKF,IAAIG,GAAb;AAAkB;AAAA;AAAA;AAAKH,gDAAIG;AAAT,yCAAlB;AAAoC;AAAA;AAAA;AAAKH,gDAAII;AAAT,yCAApC;AAAwD;AAAA;AAAA;AAAI,8EAAU,cAAV,EAAmB,MAAK,IAAxB,EAA6B,MAAK,IAAlC,EAAuC,cAAcC,KAAKC,SAAL,CAAeN,GAAf,EAAoBO,SAApB,EAA+B,CAA/B,CAArD;AAAJ,yCAAxD;AAAoK;AAApK,qCAAT;;AAEA,yCAAKpB,QAAL,CAAc;AACVH,iDAASiB;AADC,qCAAd;AAGH;AACJ,6BAXS,CAWRpB,IAXQ,CAWH,IAXG,CAAV;AAYH;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBDI,uBAAGuB,KAAH;AACH;AACJ,aAzB2B,CAyB1B3B,IAzB0B,CAyBrB,IAzBqB,CAA5B;AA4BH;;;iCAEO;AAAA;;AACJ,gBAAI4B,OAAO;AAAA;AAAA;AACP;AAAA;AAAA,sBAAO,WAAU,qBAAjB;AACI;AAAA;AAAA;AACA;AAAA;AAAA;AAAI;AAAA;AAAA;AAAA;AAAA,6BAAJ;AAAc;AAAA;AAAA;AAAA;AAAA,6BAAd;AAA2B;AAAA;AAAA;AAAA;AAAA,6BAA3B;AAA0C;AAAA;AAAA;AACtC,8DAAM,SAAS;AAAA,+CAAM,OAAK7B,UAAL,EAAN;AAAA,qCAAf,EAAwC,WAAU,6BAAlD,EAAgF,eAAY,MAA5F,GADsC;AAEtC,8DAAM,SAAS;AAAA,+CAAM,OAAK8B,UAAL,EAAN;AAAA,qCAAf,EAAwC,WAAU,+BAAlD,EAAkF,eAAY,MAA9F;AAFsC;AAA1C;AADA,qBADJ;AAOI;AAAA;AAAA;AACC,6BAAK3B,KAAL,CAAWC;AADZ;AAPJ;AADO,aAAX;;AAcA,mBAAOyB,IAAP;AACH;;;;EApEsBE,MAAMC,S","file":"SchemaLister.js","sourcesContent":["class SchemaLister extends React.Component{\n    constructor(props){\n        super(props)\n\n        this.getSchemas = this.getSchemas.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n\n        this.state = {\n            schemas:[]\n        }\n    }\n\n    componentDidMount(){\n        this.getSchemas();\n    }\n    \n    getSchemas(){\n        let db = new PouchDB(\"schemas\");\n        this.setState({\n            schemas:[]\n        });\n\n        db.query(\"schemas/by_name\", function(err, res) {\n            if(err)\n                console.error(err);\n            else {\n                let list = []\n                list = res.rows.map(function (obj) {\n                    return obj.id;\n                });\n\n                for(var x of list){\n                    db.get(x, function(err, doc){\n                        if(err)\n                            console.error(err);\n                        else{\n                            let arr = this.state.schemas;\n                            arr.push(<tr key={doc._id}><td>{doc._id}</td><td>{doc.title}</td><td><textarea readOnly rows=\"10\" cols=\"80\" defaultValue={JSON.stringify(doc, undefined, 2)}></textarea></td><td></td></tr>);\n\n                            this.setState({\n                                schemas: arr\n                            });\n                        }\n                    }.bind(this));\n                }\n                db.close();\n            }\n        }.bind(this));\n\n\n    }\n\n    render(){\n        let view = <div>\n            <table className=\"table table-striped\">\n                <thead>\n                <tr><th>#</th><th>Name</th><th>Schema</th><th>\n                    <span onClick={() => this.getSchemas()} className=\"glyphicon glyphicon-refresh\" aria-hidden=\"true\"></span>\n                    <span onClick={() => this.showDialog()} className=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n                </th></tr>\n                </thead>\n                <tbody>\n                {this.state.schemas}\n                </tbody>\n            </table>\n        </div>\n\n        return view;\n    }\n}"]}